version = "$(pkg_version)"
description = "Build system"
requires = "async async_inotify async_parallel bin_prot core fieldslib jenga.tenacious ocaml_plugin ppx_assert.runtime-lib ppx_bench.runtime-lib ppx_expect.collector ppx_inline_test.runtime-lib re2 sexplib str typerep variantslib"
archive(byte          ) = "jenga_lib.cma"
archive(native        ) = "jenga_lib.cmxa"
archive(native, plugin) = "jenga_lib.cmxs"
exists_if = "jenga_lib.cma"

package "tenacious" (
  version = "$(pkg_version)"
  description = ""
  requires = "async bin_prot core fieldslib ppx_assert.runtime-lib ppx_bench.runtime-lib ppx_expect.collector ppx_inline_test.runtime-lib sexplib typerep variantslib"
  archive(byte          ) = "tenacious_lib.cma"
  archive(native        ) = "tenacious_lib.cmxa"
  archive(native, plugin) = "tenacious_lib.cmxs"
  exists_if = "tenacious_lib.cma"
)
